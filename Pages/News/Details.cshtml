@page "{id:int?}"
@using FakeNews.TFIDF
@model FakeNews.Pages.News.DetailsModel

@{
    ViewData["Title"] = "Details of the news";
}

<h1>Details</h1>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">

<div>
    <h4>News</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.PublishDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.PublishDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.Domain)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.Domain)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.Credibility)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.Credibility)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.NumberOfLikes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.NumberOfLikes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.News.NumberOfDislike)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.News.NumberOfDislike)
        </dd>
    </dl>
</div>
<div>
    <form method="post">
        <input type="hidden" asp-for="News.ID" />
        <a asp-page="./Edit" asp-route-id="@Model.News.ID">Edit</a> |
        <a asp-page="./Index">Back to List</a>
        <button onclick="@ToggleLike()" asp-page-handler="LikeTask" asp-route-id="@Model.News.ID"
                class="btn @(_liked == true ? "btn-primary" : "btn-secondary")">
            <i class="fas fa-thumbs-up fa-lg"></i>
        </button>
        <button onclick="@ToggleDislike()" asp-page-handler="DislikeTask" asp-route-id="@Model.News.ID"
                class="btn @(_disliked == true ? "btn-primary" : "btn-secondary")">
            <i class="fas fa-thumbs-down fa-lg"></i>
        </button>
    </form>
    <form method="post">
        <button onclick="@CheckNews(Model.News.ID)" asp-page-handler="CheckNews" asp-route-id="@Model.News.ID"
                class="btn btn-primary">
            Check News
        </button>
    </form>
</div>

<h3>@Model.Message</h3>

@functions
{
    bool _liked;

    async Task ToggleLike()
    {
        _liked = !_liked;
    }
}
@functions
{
    bool _disliked;

    async Task ToggleDislike()
    {
        _disliked = !_disliked;
    }
}
@*@functions
{
    bool _message;

    async Task CheckNews()
    {
        _message = !_message;
    }
}*@
@functions
{
    async Task<bool> CheckNews(int? id)
    {
        var message = false;
        var documents = new string[] {Model.News.Content};
        var tfidfResult = AlgorithmForTfidf.Transform(documents, 2);
        tfidfResult = AlgorithmForTfidf.Normalize(tfidfResult);

        for (var index = 0; index < tfidfResult.Length; index++)
        {
            Console.WriteLine(documents[index]);

            foreach (var value in tfidfResult[index])
            {
                Console.Write(value + ", ");

                if (value < 0)
                {
                    message =  true;
                }
                else
                {
                    message = false;
                }
            }
        }

        return message;
    }
}